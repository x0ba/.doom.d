#+title: x0ba's Doom Emacs Configuration
#+author: x0ba
#+description: A light, reasonable Doom Emacs config

* Table of Contents :toc:
- [[#intro][Intro]]
  - [[#why-emacs][Why Emacs?]]
  - [[#important-parts-of-this-config][Important parts of this config]]
- [[#configuration][Configuration]]
  - [[#personal-info][Personal info]]
  - [[#scratch][Scratch]]
  - [[#ui][UI]]
  - [[#better-defaults][Better Defaults]]
  - [[#zen-mode][Zen-mode]]
  - [[#evil][Evil]]
  - [[#dashboard][Dashboard]]
  - [[#lsp-bridge][Lsp-bridge]]
  - [[#mac-pseudo-daemon][Mac-pseudo-daemon]]
  - [[#org-mode][Org Mode]]

* Intro
** Why Emacs?
I've been through a lot of editors over time. Neovim, VSCode, Helix, even Zed for a
short period of time. But I always find myself coming back to Emacs. Maybe it's
because of org-mode. Maybe it's because you can literally make emacs your operating
system. But I think the main reason is that Emacs is unparallelled in /extensibility/.
Emacs isn't an editor. It's a lisp interpreter that just happens to include an editor.
And tetris. That's important.
** Important parts of this config
- Colorscheme: [[https://rosepinetheme.com/][Rose Pine]]
- Monospaced fonts for code/tables/metadata, variable-pitch for everything else.
- [[https://github.com/manateelazycat/lsp-bridge][lsp-bridge]], controversial but it's actually the fastest

* Configuration
** Personal info
Time to give doom my name.
#+begin_src emacs-lisp
(setq user-full-name "Daniel Xu"
      user-mail-address "hey@x0ba.lol")
#+end_src
** Scratch
 When I bring up Doom's scratch buffer with SPC x, it's often to play with
 elisp or note something down (that isn't worth an entry in my notes). I can
 do both in =lisp-interaction-mode=.
 #+begin_src emacs-lisp
(setq doom-scratch-initial-major-mode 'lisp-interaction-mode)
 #+end_src
** UI
*** Theme
Let's set our theme to rose-pine
#+begin_src emacs-lisp
(setq doom-theme 'doom-rose-pine)
#+end_src
*** Fonts
Let's set our font to Maple Mono for monospace and IBM Plex Sans for variable-pitch:
#+begin_src emacs-lisp
(setq doom-font (font-spec :family "Maple Mono" :size 14)
      doom-variable-pitch-font (font-spec :family "IBM Plex Sans" :size 16 :weight 'medium))
#+end_src
Let's also use the =mixed-pitch= package to set some sane defaults for font faces
with monospace fonts being used for code, tables, etc and variable-pitch being used for
everything else.
#+begin_src emacs-lisp
(use-package mixed-pitch
  :hook
  (text-mode . mixed-pitch-mode))
#+end_src
*** Modeline
The default doom-modeline already looks good, but let's make it look even better and
add some useful info.
#+begin_src emacs-lisp
(after! doom-modeline
  (setq evil-normal-state-tag "<λ>"
        evil-insert-state-tag "<I>"
        evil-visual-state-tag "<V>"
        evil-motion-state-tag "<M>"
        evil-emacs-state-tag "<EMACS>")

  (setq doom-modeline-modal-icon nil
        doom-modeline-major-mode-icon t
        doom-modeline-minor-modes t
        doom-modeline-major-mode-color-icon t
        doom-modeline-continuous-word-count-modes '(markdown-mode gfm-mode org-mode)
        doom-modeline-buffer-encoding nil
        inhibit-compacting-font-caches t
        find-file-visit-truename t)

  (custom-set-faces!
    '(doom-modeline-evil-insert-state :inherit doom-modeline-urgent)
    '(doom-modeline-evil-visual-state :inherit doom-modeline-warning)
    '(doom-modeline-evil-normal-state :inherit doom-modeline-buffer-path))

  (setq doom-modeline-enable-word-count t))          ;; Show word count
#+end_src
We can use the excellent =minions= package to clean up the minor-mode menu a bit
#+begin_src emacs-lisp
(use-package! minions
  :hook (after-init . minions-mode))
(setq doom-modeline-height 35)
(defun doom-modeline-conditional-buffer-encoding ()
  "We expect the encoding to be LF UTF-8, so only show the modeline when this is not the case"
  (setq-local doom-modeline-buffer-encoding
              (unless (and (memq (plist-get (coding-system-plist buffer-file-coding-system) :category)
                                 '(coding-category-undecided coding-category-utf-8))
                           (not (memq (coding-system-eol-type buffer-file-coding-system) '(1 2))))t)))
#+end_src
There's no reason for me to ever want to see the file encoding, so let's remove
that
#+begin_src emacs-lisp
(add-hook 'after-change-major-mode-hook #'doom-modeline-conditional-buffer-encoding)
#+end_src
*** Comfiness
Let's make emacs a bit comfier by adding some padding and increasing line height
#+begin_src emacs-lisp
(setq default-frame-alist '((min-height . 1)  '(height . 45)
                            (min-width  . 1)  '(width  . 81)
                            (vertical-scroll-bars . nil)
                            (internal-border-width . 15)
                            (tool-bar-lines . 0)
                            (menu-bar-lines . 0)))

(setq initial-frame-alist default-frame-alist)
(setq-default line-spacing 0.24)
#+end_src
Doom looks so much better without borders
#+begin_src emacs-lisp
(custom-set-faces!
  `(vertical-border :background ,(doom-color 'bg) :foreground ,(doom-color 'bg)))
(remove-hook 'doom-first-buffer-hook #'global-hl-line-mode)
#+end_src
** Better Defaults
Emacs' defaults aren't so good nowadays. Let's fix that:
#+begin_src emacs-lisp
(setq scroll-margin 2
      auto-save-default t
      display-line-numbers-type 'relative
      delete-by-moving-to-trash t
      truncate-string-ellipsis "…")
(global-subword-mode 1)
#+end_src
** Zen-mode
Zen-mode zooms in a bit too much by default
#+begin_src emacs-lisp
(setq +zen-text-scale 0.8)
#+end_src
** Evil
Focus the new window after splitting
#+begin_src emacs-lisp
(setq evil-split-window-below t
      evil-vsplit-window-right t)
#+end_src
Implicit /g flag on evil ex substitution, because I use the default behavior
less often.
#+begin_src emacs-lisp
(setq evil-ex-substitute-global t)
#+end_src
** Dashboard
Let's set a fancy splash image and remove all the useless stuff on the
=doom-dasboard=
#+begin_src emacs-lisp
(setq fancy-splash-image (file-name-concat doom-user-dir "splash.png"))
(setq +doom-dashboard-functions '(doom-dashboard-widget-banner))
#+end_src
** Lsp-bridge
Honestly the fastest option
#+begin_src emacs-lisp
(use-package! lsp-bridge
  :config
  (setq lsp-bridge-enable-log nil
        lsp-bridge-nix-lsp-server 'nil)
  (global-lsp-bridge-mode))
#+end_src
** Mac-pseudo-daemon
I use [[https://bitbucket.org/mituharu/emacs-mac][emacs-macport]] which doesnt support client-daemon, so I use
mac-pseudo-daemon, which automatically keeps emacs open when the
last graphical window is closed
#+begin_src emacs-lisp
(mac-pseudo-daemon-mode 1)
#+end_src
** Org Mode
*** Directories
I like to have my org files in =~/org= and to add my =school.org= and =todo.org=
files to the agenda.
#+begin_src emacs-lisp
(setq org-directory "~/org/")
(after! org-agenda
  (setq org-agenda-files (list "~/org/school.org"
                               "~/org/todo.org")))
#+end_src
*** Headings
Let's make headings bigger than normal text
#+begin_src emacs-lisp
(custom-theme-set-faces!
  'doom-rose-pine
  '(org-level-4 :inherit outline-3 :height 1.1)
  '(org-level-3 :inherit outline-3 :height 1.2)
  '(org-level-2 :inherit outline-2 :height 1.5)
  '(org-level-1 :inherit outline-1 :height 1.7)
  '(org-document-title  :height 1.7 :underline nil))
#+end_src
